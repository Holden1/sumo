# Ego vehicle is inserted with higher speed behind foe.
ego_fast_follower

# Foe vehicle is inserted with higher speed behind ego.
foe_fast_follower

# Ego vehicle is inserted with higher speed behind foe and foe brakes.	
ego_fast_follower_leader_breaking

# Foe vehicle is inserted with higher speed behind ego and ego brakes.
foe_fast_follower_leader_braking

# Ego vehicle is inserted with higher speed as leader. --> no conflict expected.
ego_fast_leader

# Initial following situation with deviating routes.
ego_leader_deviating_routes

# Initial following situation with deviating routes.
foe_leader_deviating_routes

# Joint left turn of both vehicles (test following on internal)
# 
# Probs if both on internal lane:
# 
# 10.90 determineTTCandDRAC() for encounter of vehicles 'ego1' and 'foe1' (type = FOLLOWING_FOLLOWER)
# computeTTC() with gap=179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.00, followerSpeed=10.57, leaderSpeed=10.00
# computeDRAC() with gap=179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.00, followerSpeed=10.57, leaderSpeed=10.00
# ttc=inf, drac=0.00
# 
# TODO: add also with inverted ego/foe roles
ego_follows_both_turning_left_TODO
