# -*- coding: cp1252 -*-
"""
@file       inhabMerg.py
@author     Martin Taraz
@date       2015-09-01
Script for merging the Inhabitant data
(Source: https://www.destatis.de/DE/ZahlenFakten/LaenderRegionen/Regionales/Gemeindeverzeichnis/Administrativ/Archiv/GVAuszugQ/AuszugGV3QAktuell.html)
with the Gemeinde XML data generated by using the Shape Data
(Source: https://www.zensus2011.de/SharedDocs/Downloads/DE/Shapefile/VG250_1Jan2011_WGS84.zip?__blob=publicationFile&v=29)

SUMO, Simulation of Urban MObility; see http://sumo.dlr.de/
Copyright (C) 2009-2015 DLR (http://www.dlr.de/) and contributors

This file is part of SUMO.
SUMO is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.
"""
#verschieben in EvacuationStart.py
import csv
import xml.etree.cElementTree as ET
from xml.etree.ElementTree import Element, SubElement, Comment, tostring

def merge():
    csvReader = csv.reader(open("xBevölkerungsdaten_2015-9-30.csv"), delimiter=',' , quotechar ='"')
    InhabitantArray = []
    for row in csvReader:
        InhabitantArray.append(row);

    Polygon = ET.ElementTree(file='GemeindePolygons.XML')
    root = Polygon.getroot()

    counter = 0
    fortschritt = 0
    inhabDict = {}
    for entry in InhabitantArray[3:]:
                while(len(entry[0]) < 2 ):
                    entry[0] = '0' + entry[0]  
                while(len(entry[2]) < 2 ):
                    entry[2] = '0' + entry[2]
                while(len(entry[3]) < 4 ):
                    entry[3] = '0' + entry[3]
                while(len(entry[4]) < 3 ):
                    entry[4] = '0' + entry[4]          
                inhabDict["".join(entry[:5])] = str(entry[6]).replace(' ','')
                
    for parents in root.findall("./*"):
        for elem in parents.findall("param[7]"):
            RSValue =  str(elem.attrib)[11:23]
            
            inhabitants = SubElement(parents, 'param')
                
            if RSValue in inhabDict:
                inhabitants.clear()
                inhabitants.attrib = { 'key':"INHABITANTS", 'value': inhabDict[RSValue] }
        counter = counter + 1    
    Polygon.write('PopulationPolygons.xml')

if __name__ == "__main__":
    merge()
